{"version":3,"file":"static/js/469.2c95d057.chunk.js","mappings":"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","sources":["components/Projects/ProjectCard.js","components/Projects/Projects.js","pages/Projects.js"],"sourcesContent":["import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport { FaGithub, FaExternalLinkAlt } from \"react-icons/fa\";\r\n\r\nconst ProjectCard = ({ project }) => {\r\n  const { title, description, image, technologies, category, link, github } =\r\n    project;\r\n\r\n  return (\r\n    <Card\r\n      whileHover={{ y: -10 }}\r\n      transition={{ duration: 0.3 }}\r\n      data-aos=\"fade-up\"\r\n      data-category={category}\r\n    >\r\n      <ImageContainer>\r\n        <ProjectImage src={image} alt={title} />\r\n        <ImageOverlay className=\"project-image-overlay\" />\r\n      </ImageContainer>\r\n\r\n      <CardContent>\r\n        <ProjectTitle>{title}</ProjectTitle>\r\n        <ProjectDescription>{description}</ProjectDescription>\r\n\r\n        <TechStack>\r\n          {technologies.map((tech, index) => (\r\n            <TechTag key={index}>{tech}</TechTag>\r\n          ))}\r\n        </TechStack>\r\n\r\n        <LinksContainer>\r\n          {github && (\r\n            <ProjectLink\r\n              href={github}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              aria-label={`View ${title} code on GitHub`}\r\n            >\r\n              <FaGithub /> Code\r\n            </ProjectLink>\r\n          )}\r\n          {link && (\r\n            <ProjectLink\r\n              href={link}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              aria-label={`View live demo of ${title}`}\r\n            >\r\n              <FaExternalLinkAlt /> Live\r\n            </ProjectLink>\r\n          )}\r\n        </LinksContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Card = styled(motion.div)`\r\n  background: ${(props) => props.theme.backgroundSecondary};\r\n  border-radius: var(--border-radius);\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  height: 100%;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  height: 200px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ProjectImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform var(--transition-medium);\r\n\r\n  ${Card}:hover & {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst ImageOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(\r\n    to bottom,\r\n    rgba(0, 0, 0, 0.1),\r\n    rgba(0, 0, 0, 0.6)\r\n  );\r\n  opacity: 0;\r\n  transition: opacity var(--transition-medium);\r\n\r\n  ${Card}:hover & {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  padding: 1.5rem;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ProjectTitle = styled.h3`\r\n  font-size: 1.25rem;\r\n  margin-bottom: 0.75rem;\r\n  color: ${(props) => props.theme.text};\r\n`;\r\n\r\nconst ProjectDescription = styled.p`\r\n  color: ${(props) => props.theme.textSecondary};\r\n  font-size: 0.95rem;\r\n  line-height: 1.6;\r\n  margin-bottom: 1.25rem;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst TechStack = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n  margin-bottom: 1.25rem;\r\n`;\r\n\r\nconst TechTag = styled.span`\r\n  background: ${(props) => props.theme.backgroundLight};\r\n  color: ${(props) => props.theme.textSecondary};\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 30px;\r\n  font-size: 0.8rem;\r\n  font-weight: 500;\r\n  transition:\r\n    background var(--transition-fast),\r\n    color var(--transition-fast);\r\n\r\n  &:hover {\r\n    background: ${(props) => props.theme.primary};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst LinksContainer = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-top: auto;\r\n`;\r\n\r\nconst ProjectLink = styled.a`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  color: ${(props) => props.theme.primary};\r\n  font-weight: 500;\r\n  transition: color var(--transition-fast);\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.secondary};\r\n  }\r\n`;\r\n\r\nexport default ProjectCard;\r\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport \"./Projects.css\";\r\n\r\nconst Projects = () => {\r\n  const [filter, setFilter] = useState(\"all\");\r\n\r\n  const projects = [\r\n    {\r\n      id: 1,\r\n      title: \"Part Of Their World LLC\",\r\n      description:\r\n        \"Web application for an Ohio-based party planning company that serves both as a client-facing website and an internal management tool.\",\r\n      image: \"/assets/projects/partoftheirworld.jpg\",\r\n      technologies: [\"React\", \"Firebase\", \"JavaScript\"],\r\n      category: \"web\",\r\n      link: \"https://partoftheirworld.com\",\r\n      github: \"https://github.com/claviole/partoftheirworld\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Campus Map Design Project\",\r\n      description:\r\n        \"Led a team of 12 students in developing an interactive campus map for the university.\",\r\n      image: \"/assets/projects/campusmap.jpg\",\r\n      technologies: [\"React\", \"Firebase\", \"JavaScript\", \"Google Maps API\"],\r\n      category: \"web\",\r\n      github: \"https://github.com/claviole/campus-map\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Music Genre Identification\",\r\n      description:\r\n        \"Trained a model to predict music genres based on artist images with 87% accuracy using a dataset of 20,000 images.\",\r\n      image: \"/assets/projects/musicgenre.jpg\",\r\n      technologies: [\"PyTorch\", \"FastAI\", \"Python\", \"Machine Learning\"],\r\n      category: \"ai\",\r\n      github: \"https://github.com/claviole/music-genre-id\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Image Generation with CGANs\",\r\n      description:\r\n        \"Developed and trained a CGAN from scratch to generate high-quality 720x720 images of various environments.\",\r\n      image: \"/assets/projects/imagegen.jpg\",\r\n      technologies: [\"PyTorch\", \"TensorFlow\", \"CGANs\", \"Python\"],\r\n      category: \"ai\",\r\n      github: \"https://github.com/yourusername/image-generation\",\r\n    },\r\n  ];\r\n\r\n  const filteredProjects =\r\n    filter === \"all\"\r\n      ? projects\r\n      : projects.filter((project) => project.category === filter);\r\n\r\n  return (\r\n    <ProjectsSection>\r\n      <SectionHeading>Projects & Work</SectionHeading>\r\n\r\n      <FilterContainer>\r\n        <FilterButton\r\n          className={filter === \"all\" ? \"active\" : \"\"}\r\n          onClick={() => setFilter(\"all\")}\r\n        >\r\n          All Projects\r\n        </FilterButton>\r\n        <FilterButton\r\n          className={filter === \"web\" ? \"active\" : \"\"}\r\n          onClick={() => setFilter(\"web\")}\r\n        >\r\n          Web Development\r\n        </FilterButton>\r\n        <FilterButton\r\n          className={filter === \"ai\" ? \"active\" : \"\"}\r\n          onClick={() => setFilter(\"ai\")}\r\n        >\r\n          AI & Machine Learning\r\n        </FilterButton>\r\n      </FilterContainer>\r\n\r\n      <ProjectsGrid>\r\n        {filteredProjects.map((project) => (\r\n          <ProjectCard key={project.id} project={project} />\r\n        ))}\r\n      </ProjectsGrid>\r\n    </ProjectsSection>\r\n  );\r\n};\r\n\r\nconst ProjectsSection = styled.section`\r\n  padding: var(--spacing-xl) 0;\r\n`;\r\n\r\nconst SectionHeading = styled.h2`\r\n  font-size: 2.2rem;\r\n  margin-bottom: var(--spacing-lg);\r\n  text-align: center;\r\n  color: ${(props) => props.theme.text};\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: var(--spacing-xl);\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst FilterButton = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  color: ${(props) => props.theme.textSecondary};\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  padding: 0.5rem 1rem;\r\n\r\n  &.active {\r\n    color: ${(props) => props.theme.primary};\r\n  }\r\n`;\r\n\r\nconst ProjectsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  gap: var(--spacing-lg);\r\n`;\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport ProjectsComponent from \"../components/Projects/Projects\";\r\nimport \"./Projects.css\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <ProjectsContainer className=\"container\">\r\n        <PageHeader data-aos=\"fade-up\">\r\n          <Heading>My Projects</Heading>\r\n          <Subheading>\r\n            Showcasing my work in software engineering, web development, and\r\n            artificial intelligence\r\n          </Subheading>\r\n        </PageHeader>\r\n\r\n        <ProjectsComponent />\r\n      </ProjectsContainer>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n// Styled components\r\nconst ProjectsContainer = styled.div`\r\n  padding: var(--spacing-xl) 0;\r\n`;\r\n\r\nconst PageHeader = styled.div`\r\n  text-align: center;\r\n  margin-bottom: var(--spacing-xl);\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  font-size: 2.5rem;\r\n  margin-bottom: var(--spacing-sm);\r\n  color: ${(props) => props.theme.text};\r\n`;\r\n\r\nconst Subheading = styled.p`\r\n  font-size: 1.25rem;\r\n  color: ${(props) => props.theme.textSecondary};\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default Projects;\r\n"],"names":["Card","styled","motion","div","props","theme","backgroundSecondary","ImageContainer","ProjectImage","img","ImageOverlay","CardContent","ProjectTitle","h3","text","ProjectDescription","p","textSecondary","TechStack","TechTag","span","backgroundLight","primary","LinksContainer","ProjectLink","a","secondary","_ref","project","title","description","image","technologies","category","link","github","_jsxs","whileHover","y","transition","duration","children","_jsx","src","alt","className","map","tech","index","href","target","rel","FaGithub","FaExternalLinkAlt","ProjectsSection","section","SectionHeading","h2","FilterContainer","FilterButton","button","ProjectsGrid","Projects","filter","setFilter","useState","projects","id","filteredProjects","onClick","ProjectCard","ProjectsContainer","PageHeader","Heading","h1","Subheading","initial","opacity","animate","exit","ProjectsComponent"],"sourceRoot":""}